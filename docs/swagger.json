{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Logging in to get jwt token to access admin or user api by roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login.",
                "parameters": [
                    {
                        "description": "the body to login a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.WebUnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Registering a user from public access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User register.",
                "parameters": [
                    {
                        "description": "the body to register a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/brands": {
            "get": {
                "description": "Find all brand.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Find all brand.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-array_response_BrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a brand.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Create brand.",
                "parameters": [
                    {
                        "description": "the body to create a brand",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BrandRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_BrandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.WebForbiddenError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/brands/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a brand.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Delete brand.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.WebForbiddenError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a brand.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brands"
                ],
                "summary": "Update brand.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a brand",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BrandRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_BrandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.WebForbiddenError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/cars": {
            "get": {
                "description": "Find all car.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Find all car.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "brand_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum Year",
                        "name": "min_year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum Year",
                        "name": "max_year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-array_response_CarResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a car.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Create car.",
                "parameters": [
                    {
                        "description": "the body to create a car",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CarCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_CarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.WebForbiddenError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/cars/{id}": {
            "get": {
                "description": "Find a car by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Find car.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_CarResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a car.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Delete car.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.WebForbiddenError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a car.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cars"
                ],
                "summary": "Update car.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a car",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CarUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_CarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/web.WebForbiddenError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/comments": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a comment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create comment.",
                "parameters": [
                    {
                        "description": "the body to create a comment",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CommentCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_CommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/comments/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a comment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete comment.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a comment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Update comment.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a comment",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CommentUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_CommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/favourites/{carID}": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Favourite a car.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favourites"
                ],
                "summary": "Favourite a car.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "car ID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Unfavourite a car.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favourites"
                ],
                "summary": "Unfavourite a car.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "car ID",
                        "name": "carID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/reviews": {
            "get": {
                "description": "Find all review.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Find all review.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "car_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-array_response_FindReviewResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Create a review.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Create review.",
                "parameters": [
                    {
                        "description": "the body to create a review",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReviewCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/reviews/{id}": {
            "get": {
                "description": "Find a review by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Find review.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_FindReviewResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a review.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete review.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update a review.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Update review.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update a review",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReviewUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/reviews/{id}/comments": {
            "get": {
                "description": "Find a comment by review id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Find comment by review id.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-array_response_CommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a user profile by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/users/favourites": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Get user profile data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user favourites.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_FavouriteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/users/password": {
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update the current user's password.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user password.",
                "parameters": [
                    {
                        "description": "the body to update a password",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePasswordRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/users/profile": {
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update the profile of a user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user profile.",
                "parameters": [
                    {
                        "description": "the body to update user profile",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserProfileRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_UpdateUserProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        },
        "/api/users/profile/{id}": {
            "get": {
                "description": "Get user profile data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user profile.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.WebSuccess-response_UserProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.WebBadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/web.WebNotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.WebInternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.BrandRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "request.CarCreateRequest": {
            "type": "object",
            "required": [
                "acceleration",
                "brand_id",
                "breaking_system_back",
                "breaking_system_front",
                "engine",
                "fuel",
                "height",
                "horse_power",
                "image_url",
                "length",
                "model",
                "name",
                "torque",
                "transmission",
                "width",
                "year"
            ],
            "properties": {
                "brand_id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1"
                },
                "model": {
                    "type": "string",
                    "x-order": "1"
                },
                "acceleration": {
                    "type": "number",
                    "x-order": "10"
                },
                "horse_power": {
                    "type": "integer",
                    "x-order": "11"
                },
                "breaking_system_front": {
                    "type": "string",
                    "x-order": "12"
                },
                "breaking_system_back": {
                    "type": "string",
                    "x-order": "13"
                },
                "fuel": {
                    "type": "string",
                    "x-order": "14"
                },
                "year": {
                    "type": "integer",
                    "minimum": 1878,
                    "x-order": "2"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "3"
                },
                "width": {
                    "type": "integer",
                    "x-order": "4"
                },
                "height": {
                    "type": "integer",
                    "x-order": "5"
                },
                "length": {
                    "type": "integer",
                    "x-order": "6"
                },
                "engine": {
                    "type": "string",
                    "x-order": "7"
                },
                "torque": {
                    "type": "integer",
                    "x-order": "8"
                },
                "transmission": {
                    "type": "string",
                    "x-order": "9"
                }
            }
        },
        "request.CarUpdateRequest": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "name": {
                    "type": "string",
                    "x-order": "1"
                },
                "model": {
                    "type": "string",
                    "x-order": "1"
                },
                "acceleration": {
                    "type": "number",
                    "x-order": "10"
                },
                "horse_power": {
                    "type": "integer",
                    "x-order": "11"
                },
                "breaking_system_front": {
                    "type": "string",
                    "x-order": "12"
                },
                "breaking_system_back": {
                    "type": "string",
                    "x-order": "13"
                },
                "fuel": {
                    "type": "string",
                    "x-order": "14"
                },
                "year": {
                    "type": "integer",
                    "minimum": 1878,
                    "x-order": "2"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "3"
                },
                "width": {
                    "type": "integer",
                    "x-order": "4"
                },
                "height": {
                    "type": "integer",
                    "x-order": "5"
                },
                "length": {
                    "type": "integer",
                    "x-order": "6"
                },
                "engine": {
                    "type": "string",
                    "x-order": "7"
                },
                "torque": {
                    "type": "integer",
                    "x-order": "8"
                },
                "transmission": {
                    "type": "string",
                    "x-order": "9"
                }
            }
        },
        "request.CommentCreateRequest": {
            "type": "object",
            "required": [
                "content",
                "review_id"
            ],
            "properties": {
                "review_id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "content": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "request.CommentUpdateRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "x-order": "0"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "request.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "x-order": "1"
                }
            }
        },
        "request.ReviewCreateRequest": {
            "type": "object",
            "required": [
                "car_id",
                "content",
                "image_url",
                "title"
            ],
            "properties": {
                "car_id": {
                    "type": "integer",
                    "x-order": "0"
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "x-order": "1"
                },
                "content": {
                    "type": "string",
                    "x-order": "2"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "3"
                }
            }
        },
        "request.ReviewUpdateRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "x-order": "0"
                },
                "content": {
                    "type": "string",
                    "x-order": "1"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "2"
                }
            }
        },
        "request.UpdatePasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "request.UpdateUserProfileRequest": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "x-order": "0"
                },
                "email": {
                    "type": "string",
                    "x-order": "1"
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "x-order": "2"
                },
                "bio": {
                    "type": "string",
                    "maxLength": 500,
                    "x-order": "3"
                },
                "age": {
                    "type": "integer",
                    "minimum": 0,
                    "x-order": "4"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "MALE",
                        "FEMALE"
                    ],
                    "x-order": "5"
                }
            }
        },
        "response.BrandResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "response.CarResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "brand_id": {
                    "type": "integer",
                    "x-order": "1",
                    "example": 2
                },
                "transmission": {
                    "type": "string",
                    "x-order": "10",
                    "example": "Manual"
                },
                "acceleration": {
                    "type": "number",
                    "x-order": "11",
                    "example": 5.6
                },
                "horse_power": {
                    "type": "integer",
                    "x-order": "12",
                    "example": 265
                },
                "breaking_system_front": {
                    "type": "string",
                    "x-order": "13",
                    "example": "Ventilated Disc"
                },
                "breaking_system_back": {
                    "type": "string",
                    "x-order": "14",
                    "example": "Disc"
                },
                "fuel": {
                    "type": "string",
                    "x-order": "15",
                    "example": "Electric"
                },
                "model": {
                    "type": "string",
                    "x-order": "2",
                    "example": "SUV"
                },
                "name": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Toyota Yaris"
                },
                "year": {
                    "type": "integer",
                    "x-order": "3",
                    "example": 2020
                },
                "image_url": {
                    "type": "string",
                    "x-order": "4",
                    "example": "image url"
                },
                "width": {
                    "type": "integer",
                    "x-order": "5",
                    "example": 462
                },
                "height": {
                    "type": "integer",
                    "x-order": "6",
                    "example": 184
                },
                "length": {
                    "type": "integer",
                    "x-order": "7",
                    "example": 137
                },
                "engine": {
                    "type": "string",
                    "x-order": "8",
                    "example": "2.0L EA113 CDLA TFSI In-Line 4 + Mild Hybrid 48V"
                },
                "torque": {
                    "type": "integer",
                    "x-order": "9",
                    "example": 370
                }
            }
        },
        "response.CommentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "review_id": {
                    "type": "integer",
                    "x-order": "1",
                    "example": 2
                },
                "user": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.CommentUserResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "content": {
                    "type": "string",
                    "x-order": "3",
                    "example": "Lorem ipsum dolor sit amet"
                },
                "created_at": {
                    "type": "string",
                    "example": "2022-01-01T00:00:00Z"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2022-01-01T00:00:00Z"
                }
            }
        },
        "response.CommentUserResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0",
                    "example": "luigi"
                }
            }
        },
        "response.FavouriteResponse": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "brand": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Honda"
                },
                "model": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Civic"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "3",
                    "example": "image url"
                }
            }
        },
        "response.FindReviewResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "x-order": "1",
                    "example": "Title"
                },
                "content": {
                    "type": "string",
                    "x-order": "2",
                    "example": "Lorem ipsum dolor sit amet"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "3",
                    "example": "image url"
                },
                "car": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ReviewCarResponse"
                        }
                    ],
                    "x-order": "4"
                },
                "user": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ReviewUserResponse"
                        }
                    ],
                    "x-order": "5"
                },
                "created_at": {
                    "type": "string",
                    "x-order": "6",
                    "example": "2022-01-01T00:00:00Z"
                },
                "updated_at": {
                    "type": "string",
                    "x-order": "7",
                    "example": "2022-01-01T00:00:00Z"
                }
            }
        },
        "response.LoginResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0",
                    "example": "luigi"
                },
                "role": {
                    "type": "string",
                    "x-order": "1",
                    "example": "USER"
                },
                "token": {
                    "type": "string",
                    "x-order": "2",
                    "example": "token"
                }
            }
        },
        "response.RegisterResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0",
                    "example": "luigi"
                },
                "role": {
                    "type": "string",
                    "x-order": "1",
                    "example": "USER"
                }
            }
        },
        "response.ReviewCarResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                }
            }
        },
        "response.ReviewResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "car_id": {
                    "type": "integer",
                    "x-order": "1",
                    "example": 2
                },
                "user_id": {
                    "type": "integer",
                    "x-order": "2",
                    "example": 3
                },
                "title": {
                    "type": "string",
                    "x-order": "3",
                    "example": "Title"
                },
                "content": {
                    "type": "string",
                    "x-order": "4",
                    "example": "Lorem ipsum dolor sit amet"
                },
                "image_url": {
                    "type": "string",
                    "x-order": "5",
                    "example": "image url"
                },
                "created_at": {
                    "type": "string",
                    "x-order": "6",
                    "example": "2022-01-01T00:00:00Z"
                },
                "updated_at": {
                    "type": "string",
                    "x-order": "7",
                    "example": "2022-01-01T00:00:00Z"
                }
            }
        },
        "response.ReviewUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "x-order": "1",
                    "example": "John Doe"
                }
            }
        },
        "response.UpdateUserProfileResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "x-order": "1",
                    "example": "luigi"
                },
                "role": {
                    "type": "string",
                    "x-order": "2",
                    "example": "USER"
                },
                "email": {
                    "type": "string",
                    "x-order": "3",
                    "example": "luigi@sam.com"
                },
                "full_name": {
                    "type": "string",
                    "x-order": "4",
                    "example": "Luigi Di Caprio"
                },
                "bio": {
                    "type": "string",
                    "x-order": "5",
                    "example": "I am Luigi"
                },
                "age": {
                    "type": "integer",
                    "x-order": "6",
                    "example": 18
                },
                "gender": {
                    "type": "string",
                    "x-order": "7",
                    "example": "MALE"
                }
            }
        },
        "response.UserProfileResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 1
                },
                "username": {
                    "type": "string",
                    "x-order": "1",
                    "example": "luigi"
                },
                "role": {
                    "type": "string",
                    "x-order": "2",
                    "example": "USER"
                },
                "email": {
                    "type": "string",
                    "x-order": "3",
                    "example": "luigi@sam.com"
                },
                "full_name": {
                    "type": "string",
                    "x-order": "4",
                    "example": "Luigi Di Caprio"
                },
                "bio": {
                    "type": "string",
                    "x-order": "5",
                    "example": "I am Luigi"
                },
                "age": {
                    "type": "integer",
                    "x-order": "6",
                    "example": 18
                },
                "gender": {
                    "type": "string",
                    "x-order": "7",
                    "example": "MALE"
                }
            }
        },
        "web.Metadata": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "x-order": "0"
                },
                "limit": {
                    "type": "integer",
                    "x-order": "1"
                },
                "total_pages": {
                    "type": "integer",
                    "x-order": "2"
                },
                "total_data": {
                    "type": "integer",
                    "x-order": "3"
                }
            }
        },
        "web.WebBadRequestError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "errors": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "web.WebForbiddenError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 403
                },
                "errors": {
                    "type": "string",
                    "example": "Forbidden"
                }
            }
        },
        "web.WebInternalServerError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "errors": {
                    "type": "string",
                    "example": "Internal Server Error"
                }
            }
        },
        "web.WebNotFoundError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "errors": {
                    "type": "string",
                    "example": "Not Found"
                }
            }
        },
        "web.WebSuccess-array_response_BrandResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.BrandResponse"
                    },
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-array_response_CarResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CarResponse"
                    },
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-array_response_CommentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CommentResponse"
                    },
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-array_response_FindReviewResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FindReviewResponse"
                    },
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_BrandResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.BrandResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_CarResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.CarResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_CommentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.CommentResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_FavouriteResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.FavouriteResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_FindReviewResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.FindReviewResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.LoginResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_RegisterResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.RegisterResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_ReviewResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.ReviewResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_UpdateUserProfileResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.UpdateUserProfileResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-response_UserProfileResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/response.UserProfileResponse"
                        }
                    ],
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebSuccess-string": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "payload": {
                    "type": "string",
                    "x-order": "2"
                },
                "metadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/web.Metadata"
                        }
                    ],
                    "x-order": "3"
                }
            }
        },
        "web.WebUnauthorizedError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "errors": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        }
    }
}